{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vrajr\\\\OneDrive\\\\Desktop\\\\New folder (2)\\\\ai-rag-chatbot-python\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiService } from '../services/apiService.js';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within an AuthProvider');\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    initializeAuth();\n  }, []);\n  const initializeAuth = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n      if (token && savedUser) {\n        try {\n          const userData = await apiService.getCurrentUser();\n          setUser(userData);\n          setIsAuthenticated(true);\n        } catch (err) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      }\n    } catch (err) {\n      console.error('Auth initialization error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      setLoading(true);\n      const response = await apiService.register(username, email, password);\n      localStorage.setItem('token', response.access_token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      setUser(response.user);\n      setIsAuthenticated(true);\n      toast.success(`Welcome ${response.user.username}! Account created successfully.`);\n      return response;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Registration failed';\n      toast.error(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      setLoading(true);\n      const response = await apiService.login(username, password);\n      localStorage.setItem('token', response.access_token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      setUser(response.user);\n      setIsAuthenticated(true);\n      toast.success(`Welcome back ${response.user.username}!`);\n      return response;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || 'Login failed';\n      toast.error(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.success('Logged out successfully');\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","initializeAuth","token","localStorage","getItem","savedUser","userData","getCurrentUser","err","removeItem","console","error","register","username","email","password","response","setItem","access_token","JSON","stringify","success","_err$response","_err$response$data","errorMessage","data","detail","login","_err$response2","_err$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vrajr/OneDrive/Desktop/New folder (2)/ai-rag-chatbot-python/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiService } from '../services/apiService.js';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within an AuthProvider');\n  return context;\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    initializeAuth();\n  }, []);\n\n  const initializeAuth = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n\n      if (token && savedUser) {\n        try {\n          const userData = await apiService.getCurrentUser();\n          setUser(userData);\n          setIsAuthenticated(true);\n        } catch (err) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      }\n    } catch (err) {\n      console.error('Auth initialization error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      setLoading(true);\n      const response = await apiService.register(username, email, password);\n      localStorage.setItem('token', response.access_token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      setUser(response.user);\n      setIsAuthenticated(true);\n      toast.success(`Welcome ${response.user.username}! Account created successfully.`);\n      return response;\n    } catch (err) {\n      const errorMessage = err.response?.data?.detail || 'Registration failed';\n      toast.error(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (username, password) => {\n    try {\n      setLoading(true);\n      const response = await apiService.login(username, password);\n      localStorage.setItem('token', response.access_token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      setUser(response.user);\n      setIsAuthenticated(true);\n      toast.success(`Welcome back ${response.user.username}!`);\n      return response;\n    } catch (err) {\n      const errorMessage = err.response?.data?.detail || 'Login failed';\n      toast.error(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.success('Logged out successfully');\n  };\n\n  const value = { user, isAuthenticated, loading, login, register, logout };\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}