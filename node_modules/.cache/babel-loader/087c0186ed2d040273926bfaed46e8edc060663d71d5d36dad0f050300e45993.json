{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{apiService}from'../services/apiService.js';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export function useAuth(){const context=useContext(AuthContext);if(!context)throw new Error('useAuth must be used within an AuthProvider');return context;}export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[isAuthenticated,setIsAuthenticated]=useState(false);useEffect(()=>{initializeAuth();},[]);const initializeAuth=async()=>{try{const token=localStorage.getItem('token');const savedUser=localStorage.getItem('user');if(token&&savedUser){try{const userData=await apiService.getCurrentUser();setUser(userData);setIsAuthenticated(true);}catch(err){localStorage.removeItem('token');localStorage.removeItem('user');setUser(null);setIsAuthenticated(false);}}}catch(err){console.error('Auth initialization error:',err);}finally{setLoading(false);}};const register=async(username,email,password)=>{try{setLoading(true);const response=await apiService.register(username,email,password);localStorage.setItem('token',response.access_token);localStorage.setItem('user',JSON.stringify(response.user));setUser(response.user);setIsAuthenticated(true);toast.success(\"Welcome \".concat(response.user.username,\"! Account created successfully.\"));return response;}catch(err){var _err$response,_err$response$data;const errorMessage=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.detail)||'Registration failed';toast.error(errorMessage);throw new Error(errorMessage);}finally{setLoading(false);}};const login=async(username,password)=>{try{setLoading(true);const response=await apiService.login(username,password);localStorage.setItem('token',response.access_token);localStorage.setItem('user',JSON.stringify(response.user));setUser(response.user);setIsAuthenticated(true);toast.success(\"Welcome back \".concat(response.user.username,\"!\"));return response;}catch(err){var _err$response2,_err$response2$data;const errorMessage=((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.detail)||'Login failed';toast.error(errorMessage);throw new Error(errorMessage);}finally{setLoading(false);}};const logout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setUser(null);setIsAuthenticated(false);toast.success('Logged out successfully');};const value={user,isAuthenticated,loading,login,register,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","initializeAuth","token","localStorage","getItem","savedUser","userData","getCurrentUser","err","removeItem","console","error","register","username","email","password","response","setItem","access_token","JSON","stringify","success","concat","_err$response","_err$response$data","errorMessage","data","detail","login","_err$response2","_err$response2$data","logout","value","Provider"],"sources":["C:/Users/vrajr/Downloads/ai-rag-chatbot-python/ai-rag-chatbot-python/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiService } from '../services/apiService.js';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within an AuthProvider');\n  return context;\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    initializeAuth();\n  }, []);\n\n  const initializeAuth = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const savedUser = localStorage.getItem('user');\n\n      if (token && savedUser) {\n        try {\n          const userData = await apiService.getCurrentUser();\n          setUser(userData);\n          setIsAuthenticated(true);\n        } catch (err) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      }\n    } catch (err) {\n      console.error('Auth initialization error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      setLoading(true);\n      const response = await apiService.register(username, email, password);\n      localStorage.setItem('token', response.access_token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      setUser(response.user);\n      setIsAuthenticated(true);\n      toast.success(`Welcome ${response.user.username}! Account created successfully.`);\n      return response;\n    } catch (err) {\n      const errorMessage = err.response?.data?.detail || 'Registration failed';\n      toast.error(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (username, password) => {\n    try {\n      setLoading(true);\n      const response = await apiService.login(username, password);\n      localStorage.setItem('token', response.access_token);\n      localStorage.setItem('user', JSON.stringify(response.user));\n      setUser(response.user);\n      setIsAuthenticated(true);\n      toast.success(`Welcome back ${response.user.username}!`);\n      return response;\n    } catch (err) {\n      const errorMessage = err.response?.data?.detail || 'Login failed';\n      toast.error(errorMessage);\n      throw new Error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.success('Logged out successfully');\n  };\n\n  const value = { user, isAuthenticated, loading, login, register, logout };\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}