{"ast":null,"code":"import axios from 'axios';\nimport toast from 'react-hot-toast';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_BASE_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      withCredentials: true // add this for cookie support if backend sends cookies\n    });\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) config.headers.Authorization = `Bearer ${token}`;\n      return config;\n    });\n    this.api.interceptors.response.use(response => response, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n  }\n  async register(username, email, password) {\n    const response = await this.api.post('/auth/register', {\n      username,\n      email,\n      password\n    });\n    return response.data;\n  }\n  async login(username, password) {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const response = await this.api.post('/auth/token', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  }\n  async getCurrentUser() {\n    const response = await this.api.get('/auth/me');\n    return response.data;\n  }\n  async getDocumentStats() {\n    const response = await this.api.get('/documents/stats');\n    return response.data;\n  }\n  async sendMessage(message, conversationId = null, mode = 'rag') {\n    const params = new URLSearchParams();\n    if (mode) params.append('mode', mode);\n    const url = `/chat/?${params.toString()}`;\n    const payload = {\n      message\n    };\n    if (conversationId !== null && conversationId !== undefined) {\n      payload.conversation_id = conversationId;\n    }\n    try {\n      const response = await this.api.post(url, payload);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      console.error('sendMessage API error:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message || error);\n      toast.error('Error sending message, please try again.');\n      throw error;\n    }\n  }\n  async getConversations(skip = 0, limit = 20) {\n    const response = await this.api.get(`/chat/conversations?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n  async getConversationMessages(conversationId, skip = 0, limit = 50) {\n    const response = await this.api.get(`/chat/conversations/${conversationId}/messages?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n  async deleteConversation(conversationId) {\n    const response = await this.api.delete(`/chat/conversations/${conversationId}`);\n    return response.data;\n  }\n  async getChatStats() {\n    const response = await this.api.get('/chat/stats');\n    return response.data;\n  }\n}\nexport const apiService = new ApiService();","map":{"version":3,"names":["axios","toast","API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","register","username","email","password","post","data","login","formData","FormData","append","getCurrentUser","get","getDocumentStats","sendMessage","message","conversationId","mode","params","URLSearchParams","url","toString","payload","undefined","conversation_id","_error$response2","console","getConversations","skip","limit","getConversationMessages","deleteConversation","delete","getChatStats","apiService"],"sources":["C:/Users/vrajr/Downloads/ai-rag-chatbot-python/ai-rag-chatbot-python/frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\n\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_BASE_URL,\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true, // add this for cookie support if backend sends cookies\n    });\n\n    this.api.interceptors.request.use((config) => {\n      const token = localStorage.getItem('token');\n      if (token) config.headers.Authorization = `Bearer ${token}`;\n      return config;\n    });\n\n    this.api.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  async register(username, email, password) {\n    const response = await this.api.post('/auth/register', { username, email, password });\n    return response.data;\n  }\n\n  async login(username, password) {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const response = await this.api.post('/auth/token', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    });\n    return response.data;\n  }\n\n  async getCurrentUser() {\n    const response = await this.api.get('/auth/me');\n    return response.data;\n  }\n\n  async getDocumentStats() {\n    const response = await this.api.get('/documents/stats');\n    return response.data;\n  }\n\n  async sendMessage(message, conversationId = null, mode = 'rag') {\n    const params = new URLSearchParams();\n    if (mode) params.append('mode', mode);\n\n    const url = `/chat/?${params.toString()}`;\n\n    const payload = { message };\n    if (conversationId !== null && conversationId !== undefined) {\n      payload.conversation_id = conversationId;\n    }\n\n    try {\n      const response = await this.api.post(url, payload);\n      return response.data;\n    } catch (error) {\n      console.error('sendMessage API error:', error.response?.data || error.message || error);\n      toast.error('Error sending message, please try again.');\n      throw error;\n    }\n  }\n\n  async getConversations(skip = 0, limit = 20) {\n    const response = await this.api.get(`/chat/conversations?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n\n  async getConversationMessages(conversationId, skip = 0, limit = 50) {\n    const response = await this.api.get(`/chat/conversations/${conversationId}/messages?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n\n  async deleteConversation(conversationId) {\n    const response = await this.api.delete(`/chat/conversations/${conversationId}`);\n    return response.data;\n  }\n\n  async getChatStats() {\n    const response = await this.api.get('/chat/stats');\n    return response.data;\n  }\n}\n\nexport const apiService = new ApiService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,8BAA8B;AAEpF,MAAMC,UAAU,CAAC;EACfC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,GAAG,GAAGR,KAAK,CAACS,MAAM,CAAC;MACtBC,OAAO,EAAER,YAAY;MACrBS,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,eAAe,EAAE,IAAI,CAAE;IACzB,CAAC,CAAC;IAEF,IAAI,CAACJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;MAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAED,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;MAC3D,OAAOD,MAAM;IACf,CAAC,CAAC;IAEF,IAAI,CAACR,GAAG,CAACK,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC/BM,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;MAAA,IAAAC,eAAA;MACT,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;QAClCN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;QAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MACjC;MACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;IAC9B,CACF,CAAC;EACH;EAEA,MAAMS,QAAQA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IACxC,MAAMb,QAAQ,GAAG,MAAM,IAAI,CAACb,GAAG,CAAC2B,IAAI,CAAC,gBAAgB,EAAE;MAAEH,QAAQ;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IACrF,OAAOb,QAAQ,CAACe,IAAI;EACtB;EAEA,MAAMC,KAAKA,CAACL,QAAQ,EAAEE,QAAQ,EAAE;IAC9B,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAER,QAAQ,CAAC;IACrCM,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEN,QAAQ,CAAC;IACrC,MAAMb,QAAQ,GAAG,MAAM,IAAI,CAACb,GAAG,CAAC2B,IAAI,CAAC,aAAa,EAAEG,QAAQ,EAAE;MAC5D3B,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACnD,CAAC,CAAC;IACF,OAAOU,QAAQ,CAACe,IAAI;EACtB;EAEA,MAAMK,cAAcA,CAAA,EAAG;IACrB,MAAMpB,QAAQ,GAAG,MAAM,IAAI,CAACb,GAAG,CAACkC,GAAG,CAAC,UAAU,CAAC;IAC/C,OAAOrB,QAAQ,CAACe,IAAI;EACtB;EAEA,MAAMO,gBAAgBA,CAAA,EAAG;IACvB,MAAMtB,QAAQ,GAAG,MAAM,IAAI,CAACb,GAAG,CAACkC,GAAG,CAAC,kBAAkB,CAAC;IACvD,OAAOrB,QAAQ,CAACe,IAAI;EACtB;EAEA,MAAMQ,WAAWA,CAACC,OAAO,EAAEC,cAAc,GAAG,IAAI,EAAEC,IAAI,GAAG,KAAK,EAAE;IAC9D,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIF,IAAI,EAAEC,MAAM,CAACR,MAAM,CAAC,MAAM,EAAEO,IAAI,CAAC;IAErC,MAAMG,GAAG,GAAG,UAAUF,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE;IAEzC,MAAMC,OAAO,GAAG;MAAEP;IAAQ,CAAC;IAC3B,IAAIC,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAKO,SAAS,EAAE;MAC3DD,OAAO,CAACE,eAAe,GAAGR,cAAc;IAC1C;IAEA,IAAI;MACF,MAAMzB,QAAQ,GAAG,MAAM,IAAI,CAACb,GAAG,CAAC2B,IAAI,CAACe,GAAG,EAAEE,OAAO,CAAC;MAClD,OAAO/B,QAAQ,CAACe,IAAI;IACtB,CAAC,CAAC,OAAOd,KAAK,EAAE;MAAA,IAAAiC,gBAAA;MACdC,OAAO,CAAClC,KAAK,CAAC,wBAAwB,EAAE,EAAAiC,gBAAA,GAAAjC,KAAK,CAACD,QAAQ,cAAAkC,gBAAA,uBAAdA,gBAAA,CAAgBnB,IAAI,KAAId,KAAK,CAACuB,OAAO,IAAIvB,KAAK,CAAC;MACvFrB,KAAK,CAACqB,KAAK,CAAC,0CAA0C,CAAC;MACvD,MAAMA,KAAK;IACb;EACF;EAEA,MAAMmC,gBAAgBA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAE;IAC3C,MAAMtC,QAAQ,GAAG,MAAM,IAAI,CAACb,GAAG,CAACkC,GAAG,CAAC,4BAA4BgB,IAAI,UAAUC,KAAK,EAAE,CAAC;IACtF,OAAOtC,QAAQ,CAACe,IAAI;EACtB;EAEA,MAAMwB,uBAAuBA,CAACd,cAAc,EAAEY,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAE;IAClE,MAAMtC,QAAQ,GAAG,MAAM,IAAI,CAACb,GAAG,CAACkC,GAAG,CAAC,uBAAuBI,cAAc,kBAAkBY,IAAI,UAAUC,KAAK,EAAE,CAAC;IACjH,OAAOtC,QAAQ,CAACe,IAAI;EACtB;EAEA,MAAMyB,kBAAkBA,CAACf,cAAc,EAAE;IACvC,MAAMzB,QAAQ,GAAG,MAAM,IAAI,CAACb,GAAG,CAACsD,MAAM,CAAC,uBAAuBhB,cAAc,EAAE,CAAC;IAC/E,OAAOzB,QAAQ,CAACe,IAAI;EACtB;EAEA,MAAM2B,YAAYA,CAAA,EAAG;IACnB,MAAM1C,QAAQ,GAAG,MAAM,IAAI,CAACb,GAAG,CAACkC,GAAG,CAAC,aAAa,CAAC;IAClD,OAAOrB,QAAQ,CAACe,IAAI;EACtB;AACF;AAEA,OAAO,MAAM4B,UAAU,GAAG,IAAI1D,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}