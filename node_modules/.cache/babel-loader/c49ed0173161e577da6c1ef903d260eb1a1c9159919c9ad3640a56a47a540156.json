{"ast":null,"code":"import axios from'axios';import toast from'react-hot-toast';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000/api/v1';class ApiService{constructor(){this.api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});this.api.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token)config.headers.Authorization=\"Bearer \".concat(token);return config;});this.api.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(error);});}async register(username,email,password){const response=await this.api.post('/auth/register',{username,email,password});return response.data;}async login(username,password){const formData=new FormData();formData.append('username',username);formData.append('password',password);const response=await this.api.post('/auth/token',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}async getCurrentUser(){const response=await this.api.get('/auth/me');return response.data;}async uploadDocument(file){let onUploadProgress=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;const formData=new FormData();formData.append('file',file);const response=await this.api.post('/documents/upload',formData,{headers:{'Content-Type':'multipart/form-data'},onUploadProgress:onUploadProgress?progressEvent=>{const percentCompleted=Math.round(progressEvent.loaded*100/progressEvent.total);onUploadProgress(percentCompleted);}:undefined});return response.data;}async getDocuments(){let skip=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:50;const response=await this.api.get(\"/documents/?skip=\".concat(skip,\"&limit=\").concat(limit));return response.data;}async deleteDocument(documentId){const response=await this.api.delete(\"/documents/\".concat(documentId));return response.data;}async getDocumentStats(){const response=await this.api.get('/documents/stats');return response.data;}// Updated sendMessage with error handling\nasync sendMessage(message){let conversationId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let mode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'rag';const params=new URLSearchParams();if(mode)params.append('mode',mode);const url=\"/chat/?\".concat(params.toString());const payload={message};if(conversationId!==null&&conversationId!==undefined){payload.conversation_id=conversationId;}try{const response=await this.api.post(url,payload);return response.data;}catch(error){var _error$response2;console.error('sendMessage API error:',((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message||error);toast.error('Error sending message, please try again.');throw error;}}async getConversations(){let skip=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;const response=await this.api.get(\"/chat/conversations?skip=\".concat(skip,\"&limit=\").concat(limit));return response.data;}async getConversationMessages(conversationId){let skip=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:50;const response=await this.api.get(\"/chat/conversations/\".concat(conversationId,\"/messages?skip=\").concat(skip,\"&limit=\").concat(limit));return response.data;}async deleteConversation(conversationId){const response=await this.api.delete(\"/chat/conversations/\".concat(conversationId));return response.data;}async getChatStats(){const response=await this.api.get('/chat/stats');return response.data;}}export const apiService=new ApiService();","map":{"version":3,"names":["axios","toast","API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","register","username","email","password","post","data","login","formData","FormData","append","getCurrentUser","get","uploadDocument","file","onUploadProgress","arguments","length","undefined","progressEvent","percentCompleted","Math","round","loaded","total","getDocuments","skip","limit","deleteDocument","documentId","delete","getDocumentStats","sendMessage","message","conversationId","mode","params","URLSearchParams","url","toString","payload","conversation_id","_error$response2","console","getConversations","getConversationMessages","deleteConversation","getChatStats","apiService"],"sources":["C:/Users/vrajr/Downloads/ai-rag-chatbot-python/ai-rag-chatbot-python/frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\n\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_BASE_URL,\n      headers: { 'Content-Type': 'application/json' },\n    });\n\n    this.api.interceptors.request.use((config) => {\n      const token = localStorage.getItem('token');\n      if (token) config.headers.Authorization = `Bearer ${token}`;\n      return config;\n    });\n\n    this.api.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  async register(username, email, password) {\n    const response = await this.api.post('/auth/register', { username, email, password });\n    return response.data;\n  }\n\n  async login(username, password) {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const response = await this.api.post('/auth/token', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    });\n    return response.data;\n  }\n\n  async getCurrentUser() {\n    const response = await this.api.get('/auth/me');\n    return response.data;\n  }\n\n  async uploadDocument(file, onUploadProgress = null) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await this.api.post('/documents/upload', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n      onUploadProgress: onUploadProgress\n        ? (progressEvent) => {\n            const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n            onUploadProgress(percentCompleted);\n          }\n        : undefined,\n    });\n    return response.data;\n  }\n\n  async getDocuments(skip = 0, limit = 50) {\n    const response = await this.api.get(`/documents/?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n\n  async deleteDocument(documentId) {\n    const response = await this.api.delete(`/documents/${documentId}`);\n    return response.data;\n  }\n\n  async getDocumentStats() {\n    const response = await this.api.get('/documents/stats');\n    return response.data;\n  }\n\n  // Updated sendMessage with error handling\n  async sendMessage(message, conversationId = null, mode = 'rag') {\n    const params = new URLSearchParams();\n    if (mode) params.append('mode', mode);\n\n    const url = `/chat/?${params.toString()}`;\n\n    const payload = { message };\n    if (conversationId !== null && conversationId !== undefined) {\n      payload.conversation_id = conversationId;\n    }\n\n    try {\n      const response = await this.api.post(url, payload);\n      return response.data;\n    } catch (error) {\n      console.error('sendMessage API error:', error.response?.data || error.message || error);\n      toast.error('Error sending message, please try again.');\n      throw error;\n    }\n  }\n\n  async getConversations(skip = 0, limit = 20) {\n    const response = await this.api.get(`/chat/conversations?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n\n  async getConversationMessages(conversationId, skip = 0, limit = 50) {\n    const response = await this.api.get(`/chat/conversations/${conversationId}/messages?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n\n  async deleteConversation(conversationId) {\n    const response = await this.api.delete(`/chat/conversations/${conversationId}`);\n    return response.data;\n  }\n\n  async getChatStats() {\n    const response = await this.api.get('/chat/stats');\n    return response.data;\n  }\n}\n\nexport const apiService = new ApiService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}