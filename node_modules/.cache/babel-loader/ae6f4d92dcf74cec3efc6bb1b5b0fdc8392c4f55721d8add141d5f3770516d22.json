{"ast":null,"code":"import axios from 'axios';\nimport toast from 'react-hot-toast';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_BASE_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    this.api.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) config.headers.Authorization = `Bearer ${token}`;\n      return config;\n    });\n    this.api.interceptors.response.use(response => response, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n  }\n  async register(username, email, password) {\n    const response = await this.api.post('/auth/register', {\n      username,\n      email,\n      password\n    });\n    return response.data;\n  }\n  async login(username, password) {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const response = await this.api.post('/auth/token', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  }\n  async getCurrentUser() {\n    const response = await this.api.get('/auth/me');\n    return response.data;\n  }\n  async uploadDocument(file, onUploadProgress = null) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await this.api.post('/documents/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      onUploadProgress: onUploadProgress ? progressEvent => {\n        const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        onUploadProgress(percentCompleted);\n      } : undefined\n    });\n    return response.data;\n  }\n  async getDocuments(skip = 0, limit = 50) {\n    const response = await this.api.get(`/documents/?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n  async deleteDocument(documentId) {\n    const response = await this.api.delete(`/documents/${documentId}`);\n    return response.data;\n  }\n  async getDocumentStats() {\n    const response = await this.api.get('/documents/stats');\n    return response.data;\n  }\n\n  // Updated sendMessage to accept mode param, added as query parameter\n  async sendMessage(message, conversationId = null, mode = 'rag') {\n    // Construct query param string\n    const params = new URLSearchParams();\n    if (mode) params.append('mode', mode);\n    const url = `/chat/?${params.toString()}`;\n    const payload = {\n      message\n    };\n    if (conversationId !== null && conversationId !== undefined) {\n      payload.conversation_id = conversationId;\n    }\n    const response = await this.api.post(url, payload);\n    return response.data;\n  }\n  async getConversations(skip = 0, limit = 20) {\n    const response = await this.api.get(`/chat/conversations?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n  async getConversationMessages(conversationId, skip = 0, limit = 50) {\n    const response = await this.api.get(`/chat/conversations/${conversationId}/messages?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n  async deleteConversation(conversationId) {\n    const response = await this.api.delete(`/chat/conversations/${conversationId}`);\n    return response.data;\n  }\n  async getChatStats() {\n    const response = await this.api.get('/chat/stats');\n    return response.data;\n  }\n}\nexport const apiService = new ApiService();","map":{"version":3,"names":["axios","toast","API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","register","username","email","password","post","data","login","formData","FormData","append","getCurrentUser","get","uploadDocument","file","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","undefined","getDocuments","skip","limit","deleteDocument","documentId","delete","getDocumentStats","sendMessage","message","conversationId","mode","params","URLSearchParams","url","toString","payload","conversation_id","getConversations","getConversationMessages","deleteConversation","getChatStats","apiService"],"sources":["C:/Users/vrajr/OneDrive/Desktop/New folder (2)/ai-rag-chatbot-python/frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\n\nclass ApiService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_BASE_URL,\n      headers: { 'Content-Type': 'application/json' },\n    });\n\n    this.api.interceptors.request.use((config) => {\n      const token = localStorage.getItem('token');\n      if (token) config.headers.Authorization = `Bearer ${token}`;\n      return config;\n    });\n\n    this.api.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        if (error.response?.status === 401) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          window.location.href = '/login';\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  async register(username, email, password) {\n    const response = await this.api.post('/auth/register', { username, email, password });\n    return response.data;\n  }\n\n  async login(username, password) {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const response = await this.api.post('/auth/token', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    });\n    return response.data;\n  }\n\n  async getCurrentUser() {\n    const response = await this.api.get('/auth/me');\n    return response.data;\n  }\n\n  async uploadDocument(file, onUploadProgress = null) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await this.api.post('/documents/upload', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n      onUploadProgress: onUploadProgress\n        ? (progressEvent) => {\n            const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n            onUploadProgress(percentCompleted);\n          }\n        : undefined,\n    });\n    return response.data;\n  }\n\n  async getDocuments(skip = 0, limit = 50) {\n    const response = await this.api.get(`/documents/?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n\n  async deleteDocument(documentId) {\n    const response = await this.api.delete(`/documents/${documentId}`);\n    return response.data;\n  }\n\n  async getDocumentStats() {\n    const response = await this.api.get('/documents/stats');\n    return response.data;\n  }\n\n  // Updated sendMessage to accept mode param, added as query parameter\n  async sendMessage(message, conversationId = null, mode = 'rag') {\n    // Construct query param string\n    const params = new URLSearchParams();\n    if (mode) params.append('mode', mode);\n\n    const url = `/chat/?${params.toString()}`;\n\n    const payload = { message };\n    if (conversationId !== null && conversationId !== undefined) {\n      payload.conversation_id = conversationId;\n    }\n    const response = await this.api.post(url, payload);\n    return response.data;\n  }\n\n  async getConversations(skip = 0, limit = 20) {\n    const response = await this.api.get(`/chat/conversations?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n\n  async getConversationMessages(conversationId, skip = 0, limit = 50) {\n    const response = await this.api.get(`/chat/conversations/${conversationId}/messages?skip=${skip}&limit=${limit}`);\n    return response.data;\n  }\n\n  async deleteConversation(conversationId) {\n    const response = await this.api.delete(`/chat/conversations/${conversationId}`);\n    return response.data;\n  }\n\n  async getChatStats() {\n    const response = await this.api.get('/chat/stats');\n    return response.data;\n  }\n}\n\nexport const apiService = new ApiService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}