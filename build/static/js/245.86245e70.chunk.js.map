{"version":3,"file":"static/js/245.86245e70.chunk.js","mappings":"oNAIA,MAAMA,EAAa,CACjB,CAAEC,KAAM,YAAaC,KAAM,aAAcC,KAAM,gBAC/C,CAAEF,KAAM,iBAAkBC,KAAM,kBAAmBC,KAAM,gBACzD,CAAEF,KAAM,OAAQC,KAAM,QAASC,KAAM,iBA+FvC,QA5FA,SAAeC,GAAgB,IAAf,SAAEC,GAAUD,EAC1B,MAAOE,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACzC,KAAEC,EAAI,OAAEC,IAAWC,EAAAA,EAAAA,KACnBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,+BAA8BZ,SAAA,EAE3Ca,EAAAA,EAAAA,KAAA,OAAKD,UAAU,2DAA0DZ,UACvEW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iEAAgEZ,SAAA,EAC7EW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCZ,SAAA,EAC7Ca,EAAAA,EAAAA,KAAA,OAAKD,UAAU,4CAA2CZ,UACxDa,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oBAAmBZ,UAEhCa,EAAAA,EAAAA,KAAA,OAAAb,UACEa,EAAAA,EAAAA,KAAA,MAAID,UAAU,kCAAiCZ,SAAC,uBAMtDa,EAAAA,EAAAA,KAAA,OAAKD,UAAU,6BAA4BZ,SACxCL,EAAWmB,IAAKC,IACf,MAAMC,EAAWT,EAASU,WAAaF,EAAKlB,KAC5C,OACEc,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CACaC,GAAIJ,EAAKlB,KACzBe,UAAS,uGAAAQ,OACPJ,EACI,gEACA,sDACHhB,SAAA,EAEHa,EAAAA,EAAAA,KAAA,QAAMD,UAAU,eAAcZ,SAAEe,EAAKjB,OACpCiB,EAAKnB,OARDmB,EAAKnB,cAepBiB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kDAAiDZ,UAC9DW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BZ,SAAA,EACvCa,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oEAAmEZ,UAChFa,EAAAA,EAAAA,KAAA,QAAAb,SAAM,oBAERW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBZ,SAAA,EAClCa,EAAAA,EAAAA,KAAA,KAAGD,UAAU,6CAA4CZ,SAAM,OAAJI,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,YACjER,EAAAA,EAAAA,KAAA,KAAGD,UAAU,iCAAgCZ,SAAM,OAAJI,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,YAEvDX,EAAAA,EAAAA,MAAA,UAAQY,QAlDCC,KACnBnB,IACAI,EAAS,WAiDXG,UAAU,mGACVa,MAAM,SAAQzB,SAAA,EAEda,EAAAA,EAAAA,KAAA,OACEa,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPnB,UAAU,eAAcZ,UAExBa,EAAAA,EAAAA,KAAA,QAAMmB,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,4JAEvEtB,EAAAA,EAAAA,KAAA,QAAAb,SAAM,yBAQFa,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gCAA+BZ,UAC5Ca,EAAAA,EAAAA,KAAA,QAAMD,UAAU,SAAQZ,UACtBa,EAAAA,EAAAA,KAAA,OAAKD,UAAU,OAAMZ,UACnBa,EAAAA,EAAAA,KAAA,OAAKD,UAAU,yCAAwCZ,SACpDA,YAOf,C","sources":["components/Layout.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext.jsx';\n\nconst navigation = [\n  { name: 'Dashboard', href: '/dashboard', icon: '🏠' },\n  { name: 'Knowledge Base', href: '/knowledge-base', icon: '📚' },\n  { name: 'Chat', href: '/chat', icon: '💬' },\n];\n\nfunction Layout({ children }) {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const { user, logout } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* Desktop sidebar */}\n      <div className=\"hidden md:flex md:w-64 md:flex-col md:fixed md:inset-y-0\">\n        <div className=\"flex-1 flex flex-col min-h-0 border-r border-gray-200 bg-white\">\n          <div className=\"flex-1 flex flex-col pt-5 pb-4\">\n            <div className=\"flex items-center flex-shrink-0 px-4 mb-8\">\n              <div className=\"flex items-center\">\n                \n                <div>\n                  <h1 className=\"text-lg font-bold text-gray-900\">AI RAG Chat</h1>\n               \n                </div>\n              </div>\n            </div>\n\n            <nav className=\"mt-5 flex-1 px-2 space-y-1\">\n              {navigation.map((item) => {\n                const isActive = location.pathname === item.href;\n                return (\n                  <Link\n                    key={item.name} to={item.href}\n                    className={`group flex items-center px-2.5 py-2.5 text-sm font-medium rounded-lg transition-colors duration-200 ${\n                      isActive \n                        ? 'bg-primary-100 text-primary-900 border-r-2 border-primary-600' \n                        : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                    }`}\n                  >\n                    <span className=\"mr-3 text-lg\">{item.icon}</span>\n                    {item.name}\n                  </Link>\n                );\n              })}\n            </nav>\n          </div>\n\n          <div className=\"flex-shrink-0 flex border-t border-gray-200 p-4\">\n            <div className=\"flex items-center w-full\">\n              <div className=\"h-8 w-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                <span>👤</span>\n              </div>\n              <div className=\"ml-3 flex-1 min-w-0\">\n                <p className=\"text-sm font-medium text-gray-900 truncate\">{user?.username}</p>\n                <p className=\"text-xs text-gray-500 truncate\">{user?.email}</p>\n              </div>\n              <button onClick={handleLogout}\n  className=\"ml-2 px-3 py-1 bg-red-500 text-white flex items-center gap-2 rounded hover:bg-red-600 transition\"\n  title=\"Logout\"\n>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    className=\"inline-block\"\n  >\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a2 2 0 001 1.73m-2.002-1.73A2 2 0 017 17v-1m6 1.73A2 2 0 0113 17v-1m0 1.73V17m0-11.73V7a2 2 0 00-1-1.73A2 2 0 007 7v1\" />\n  </svg>\n  <span>Logout</span>\n</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main content */}\n      <div className=\"md:pl-64 flex flex-col flex-1\">\n        <main className=\"flex-1\">\n          <div className=\"py-6\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 md:px-8\">\n              {children}\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;"],"names":["navigation","name","href","icon","_ref","children","sidebarOpen","setSidebarOpen","useState","user","logout","useAuth","location","useLocation","navigate","useNavigate","_jsxs","className","_jsx","map","item","isActive","pathname","Link","to","concat","username","email","onClick","handleLogout","title","xmlns","width","height","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sourceRoot":""}