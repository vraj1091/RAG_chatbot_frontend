{"version":3,"file":"static/js/14.34f857ef.chunk.js","mappings":"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","sources":["pages/Login.jsx","components/LoadingSpinner.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext.jsx';\nimport LoadingSpinner from '../components/LoadingSpinner.jsx';\n\nfunction Login() {\n  const [formData, setFormData] = useState({ username: '', password: '' });\n  const [loading, setLoading] = useState(false);\n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!formData.username.trim() || !formData.password.trim()) return;\n\n    setLoading(true);\n    try {\n      await login(formData.username, formData.password);\n      navigate('/dashboard');\n    } catch (err) {\n      // Error handled by auth context\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-primary-50 to-blue-100 py-12 px-4\">\n      <div className=\"max-w-md w-full space-y-8 animate-fade-in\">\n        <div className=\"text-center\">\n          <div className=\"mx-auto h-16 w-16 bg-primary-600 rounded-xl flex items-center justify-center mb-6 shadow-lg\">\n            <span className=\"text-2xl\">ðŸ¤–</span>\n          </div>\n          <h2 className=\"text-3xl font-bold text-gray-900\">Welcome back</h2>\n          <p className=\"mt-2 text-sm text-gray-600\">Sign in to your AI-powered knowledge base</p>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-lg p-8\">\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">Username</label>\n              <input\n                id=\"username\" name=\"username\" type=\"text\" required className=\"input-field\"\n                placeholder=\"Enter your username\" value={formData.username}\n                onChange={handleChange} disabled={loading}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">Password</label>\n              <input\n                id=\"password\" name=\"password\" type=\"password\" required className=\"input-field\"\n                placeholder=\"Enter your password\" value={formData.password}\n                onChange={handleChange} disabled={loading}\n              />\n            </div>\n\n            <button type=\"submit\" disabled={loading} className=\"w-full btn-primary flex items-center justify-center\">\n              {loading ? <><LoadingSpinner size=\"small\" color=\"white\" className=\"mr-2\" />Signing in...</> : 'Sign in'}\n            </button>\n\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-600\">\n                Don't have an account? <Link to=\"/register\" className=\"font-medium text-primary-600 hover:text-primary-500\">Create one now</Link>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","import React from 'react';\n\nconst LoadingSpinner = ({ size = 'medium', color = 'primary', className = '' }) => {\n  const sizeClasses = {\n    small: 'h-4 w-4',\n    medium: 'h-8 w-8',\n    large: 'h-12 w-12',\n    xlarge: 'h-16 w-16'\n  };\n\n  const colorClasses = {\n    primary: 'border-primary-600',\n    gray: 'border-gray-600',\n    white: 'border-white'\n  };\n\n  return (\n    <div className={`flex items-center justify-center ${className}`}>\n      <div className={`loading-spinner ${sizeClasses[size]} ${colorClasses[color]}`} role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;"],"names":["formData","setFormData","useState","username","password","loading","setLoading","login","useAuth","navigate","useNavigate","handleChange","e","name","value","target","prev","_objectSpread","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","trim","err","htmlFor","id","type","required","placeholder","onChange","disabled","_Fragment","LoadingSpinner","size","color","Link","to","_ref","concat","small","medium","large","xlarge","primary","gray","white","role"],"sourceRoot":""}