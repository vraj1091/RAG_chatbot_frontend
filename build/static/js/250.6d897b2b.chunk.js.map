{"version":3,"file":"static/js/250.6d897b2b.chunk.js","mappings":"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","sources":["pages/KnowledgeBase.jsx","components/LoadingSpinner.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { apiService } from '../services/apiService.js';\nimport LoadingSpinner from '../components/LoadingSpinner.jsx';\nimport toast from 'react-hot-toast';\n\nfunction KnowledgeBase() {\n  const [documents, setDocuments] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [uploading, setUploading] = useState(false);\n\n  useEffect(() => {\n    loadKnowledgeBase();\n  }, []);\n\n  const loadKnowledgeBase = async () => {\n    try {\n      setLoading(true);\n      const [documentsData, statsData] = await Promise.all([\n        apiService.getDocuments(),\n        apiService.getDocumentStats()\n      ]);\n      setDocuments(documentsData);\n      setStats(statsData);\n    } catch (err) {\n      console.error('Failed to load knowledge base:', err);\n      toast.error('Failed to load knowledge base');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileUpload = async (event) => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n\n    for (const file of files) {\n      setUploading(true);\n      try {\n        const response = await apiService.uploadDocument(file);\n        setDocuments(prev => [response.document, ...prev]);\n        toast.success(`${file.name} uploaded successfully!`);\n\n        const updatedStats = await apiService.getDocumentStats();\n        setStats(updatedStats);\n      } catch (err) {\n        console.error('Upload failed:', err);\n        toast.error(`Failed to upload ${file.name}`);\n      } finally {\n        setUploading(false);\n      }\n    }\n    event.target.value = ''; // Reset file input\n  };\n\n  const deleteDocument = async (documentId, filename) => {\n    if (!window.confirm(`Delete \"${filename}\"?`)) return;\n\n    try {\n      await apiService.deleteDocument(documentId);\n      setDocuments(prev => prev.filter(doc => doc.id !== documentId));\n      toast.success('Document deleted successfully');\n\n      const updatedStats = await apiService.getDocumentStats();\n      setStats(updatedStats);\n    } catch (err) {\n      toast.error('Failed to delete document');\n    }\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'completed': return '✅';\n      case 'processing': return '⏳';\n      case 'failed': return '❌';\n      default: return '⏸️';\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  if (loading) {\n    return <div className=\"flex items-center justify-center h-64\"><LoadingSpinner size=\"large\" /></div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n          📚 Knowledge Base ({documents.length} documents)\n        </h1>\n        <p className=\"text-gray-600 mt-1\">Manage your AI knowledge base files - upload, view, and delete documents</p>\n      </div>\n\n      {/* Upload Area */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n        <div className=\"text-center\">\n          <span className=\"text-6xl mb-4 block\">📤</span>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Upload documents to knowledge base</h3>\n          <p className=\"text-gray-500 mb-4\">Supports PDF, DOCX, TXT, and image files (PNG, JPG)</p>\n\n          <label className=\"btn-primary cursor-pointer inline-flex items-center\">\n            <input\n              type=\"file\"\n              multiple\n              accept=\".pdf,.txt,.docx,.png,.jpg,.jpeg\"\n              onChange={handleFileUpload}\n              disabled={uploading}\n              className=\"hidden\"\n            />\n            {uploading ? <><LoadingSpinner size=\"small\" color=\"white\" className=\"mr-2\" />Uploading...</> : '📁 Choose Files'}\n          </label>\n\n          <p className=\"text-xs text-gray-500 mt-2\">Maximum file size: 25MB</p>\n        </div>\n      </div>\n\n      {/* Documents List */}\n      {documents.length > 0 ? (\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Your Documents</h3>\n          </div>\n          <div className=\"overflow-x-auto\">\n            <div className=\"space-y-3 p-6\">\n              {documents.map((document) => (\n                <div key={document.id} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-2xl mr-3\">\n                      {document.document_type === 'image' ? '🖼️' : '📄'}\n                    </span>\n                    <div>\n                      <div className=\"font-medium text-gray-900 truncate max-w-md\">\n                        {document.original_filename}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        {document.file_type.toUpperCase()} • {formatFileSize(document.file_size)} • {getStatusIcon(document.processing_status)} {document.processing_status}\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => deleteDocument(document.id, document.original_filename)}\n                    className=\"text-red-600 hover:text-red-800 p-2\"\n                    title=\"Delete document\"\n                  >\n                    🗑️\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"text-center py-12\">\n          <span className=\"text-6xl mb-4 block\">📚</span>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No documents in your knowledge base</h3>\n          <p className=\"text-gray-500 mb-6\">Upload your first document to start building your AI-powered knowledge base.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default KnowledgeBase;","import React from 'react';\n\nconst LoadingSpinner = ({ size = 'medium', color = 'primary', className = '' }) => {\n  const sizeClasses = {\n    small: 'h-4 w-4',\n    medium: 'h-8 w-8',\n    large: 'h-12 w-12',\n    xlarge: 'h-16 w-16'\n  };\n\n  const colorClasses = {\n    primary: 'border-primary-600',\n    gray: 'border-gray-600',\n    white: 'border-white'\n  };\n\n  return (\n    <div className={`flex items-center justify-center ${className}`}>\n      <div className={`loading-spinner ${sizeClasses[size]} ${colorClasses[color]}`} role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;"],"names":["documents","setDocuments","useState","stats","setStats","loading","setLoading","uploading","setUploading","useEffect","loadKnowledgeBase","async","documentsData","statsData","Promise","all","apiService","getDocuments","getDocumentStats","err","console","error","toast","getStatusIcon","status","formatFileSize","bytes","i","Math","floor","log","parseFloat","pow","toFixed","_jsx","className","children","LoadingSpinner","size","_jsxs","length","type","multiple","accept","onChange","files","Array","from","event","target","file","response","uploadDocument","prev","document","success","concat","name","updatedStats","value","disabled","_Fragment","color","map","document_type","original_filename","file_type","toUpperCase","file_size","processing_status","onClick","documentId","filename","window","confirm","deleteDocument","filter","doc","id","title","_ref","small","medium","large","xlarge","primary","gray","white","role"],"sourceRoot":""}