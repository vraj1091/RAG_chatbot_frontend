{"version":3,"file":"static/js/490.a5f5b04b.chunk.js","mappings":"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","sources":["components/LoadingSpinner.jsx","pages/Register.jsx"],"sourcesContent":["import React from 'react';\n\nconst LoadingSpinner = ({ size = 'medium', color = 'primary', className = '' }) => {\n  const sizeClasses = {\n    small: 'h-4 w-4',\n    medium: 'h-8 w-8',\n    large: 'h-12 w-12',\n    xlarge: 'h-16 w-16'\n  };\n\n  const colorClasses = {\n    primary: 'border-primary-600',\n    gray: 'border-gray-600',\n    white: 'border-white'\n  };\n\n  return (\n    <div className={`flex items-center justify-center ${className}`}>\n      <div className={`loading-spinner ${sizeClasses[size]} ${colorClasses[color]}`} role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext.jsx';\nimport LoadingSpinner from '../components/LoadingSpinner.jsx';\n\nfunction Register() {\n  const [formData, setFormData] = useState({\n    username: '', email: '', password: '', confirmPassword: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const { register } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const validateForm = () => {\n    return formData.username.trim() && formData.email.trim() && \n           formData.password.length >= 6 && formData.password === formData.confirmPassword;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!validateForm()) return;\n\n    setLoading(true);\n    try {\n      await register(formData.username, formData.email, formData.password);\n      navigate('/dashboard');\n    } catch (err) {\n      // Error handled by auth context\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-primary-50 to-blue-100 py-12 px-4\">\n      <div className=\"max-w-md w-full space-y-8 animate-fade-in\">\n        <div className=\"text-center\">\n          <div className=\"mx-auto h-16 w-16 bg-primary-600 rounded-xl flex items-center justify-center mb-6 shadow-lg\">\n            <span className=\"text-2xl\">ðŸ¤–</span>\n          </div>\n          <h2 className=\"text-3xl font-bold text-gray-900\">Create your account</h2>\n          <p className=\"mt-2 text-sm text-gray-600\">Start building your personalized AI knowledge base</p>\n        </div>\n\n        <div className=\"bg-white rounded-xl shadow-lg p-8\">\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 mb-2\">Username</label>\n              <input\n                id=\"username\" name=\"username\" type=\"text\" required className=\"input-field\"\n                placeholder=\"Choose a username\" value={formData.username}\n                onChange={handleChange} disabled={loading}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">Email</label>\n              <input\n                id=\"email\" name=\"email\" type=\"email\" required className=\"input-field\"\n                placeholder=\"Enter your email\" value={formData.email}\n                onChange={handleChange} disabled={loading}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-2\">Password</label>\n              <input\n                id=\"password\" name=\"password\" type=\"password\" required className=\"input-field\"\n                placeholder=\"Create a password (min 6 chars)\" value={formData.password}\n                onChange={handleChange} disabled={loading}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 mb-2\">Confirm Password</label>\n              <input\n                id=\"confirmPassword\" name=\"confirmPassword\" type=\"password\" required className=\"input-field\"\n                placeholder=\"Confirm your password\" value={formData.confirmPassword}\n                onChange={handleChange} disabled={loading}\n              />\n            </div>\n\n            <button type=\"submit\" disabled={loading || !validateForm()} className=\"w-full btn-primary flex items-center justify-center\">\n              {loading ? <><LoadingSpinner size=\"small\" color=\"white\" className=\"mr-2\" />Creating account...</> : 'Create account'}\n            </button>\n\n            <div className=\"text-center\">\n              <p className=\"text-sm text-gray-600\">\n                Already have an account? <Link to=\"/login\" className=\"font-medium text-primary-600 hover:text-primary-500\">Sign in here</Link>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;"],"names":["_ref","size","color","className","_jsx","concat","children","small","medium","large","xlarge","primary","gray","white","role","formData","setFormData","useState","username","email","password","confirmPassword","loading","setLoading","register","useAuth","navigate","useNavigate","handleChange","e","name","value","target","prev","_objectSpread","validateForm","trim","length","_jsxs","onSubmit","async","preventDefault","err","htmlFor","id","type","required","placeholder","onChange","disabled","_Fragment","LoadingSpinner","Link","to"],"sourceRoot":""}